name: "🛡️ EMERGENCY FIX: Manual Everything"

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-manual:
    runs-on: ubuntu-latest
    name: "🛡️ Manual SDK + Build"
    
    steps:
    - name: "📥 Checkout Code"
      uses: actions/checkout@v3
      
    - name: "☕ Setup JDK 17"
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: "📱 Manual Android SDK Setup"
      run: |
        # Create SDK directory
        sudo mkdir -p /opt/android-sdk
        cd /opt/android-sdk
        
        # Download command line tools
        sudo wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        sudo unzip -q commandlinetools-linux-9477386_latest.zip
        sudo mkdir -p cmdline-tools/latest
        sudo mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
        
        # Set permissions
        sudo chmod -R 755 /opt/android-sdk
        sudo chown -R $USER:$USER /opt/android-sdk
        
        # Set environment variables
        echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
        echo "/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "/opt/android-sdk/platform-tools" >> $GITHUB_PATH
        
    - name: "🔧 Install SDK Components"
      run: |
        export ANDROID_HOME=/opt/android-sdk
        export ANDROID_SDK_ROOT=/opt/android-sdk
        
        # Accept licenses
        yes | sdkmanager --licenses
        
        # Install required components
        sdkmanager "platforms;android-33"
        sdkmanager "build-tools;33.0.0"
        sdkmanager "platform-tools"
        
    - name: "🛠️ Create Minimal Project"
      run: |
        mkdir -p minimal_build/app/src/main/java/com/test
        mkdir -p minimal_build/app/src/main/res/values
        
        # Root build.gradle
        cat > minimal_build/build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:7.4.0'
                classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        # App build.gradle
        cat > minimal_build/app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
            id 'org.jetbrains.kotlin.android'
        }
        
        android {
            namespace 'com.test.minimal'
            compileSdk 33
            
            defaultConfig {
                applicationId "com.test.minimal"
                minSdk 21
                targetSdk 33
                versionCode 1
                versionName "1.0"
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }
        
        dependencies {
            implementation 'androidx.core:core-ktx:1.9.0'
        }
        EOF
        
        # Settings.gradle
        cat > minimal_build/settings.gradle << 'EOF'
        rootProject.name = "MinimalBuild"
        include ':app'
        EOF
        
        # AndroidManifest.xml
        cat > minimal_build/app/src/main/AndroidManifest.xml << 'EOF'
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <application 
                android:label="@string/app_name"
                android:theme="@android:style/Theme.Material.Light">
                <activity 
                    android:name=".MainActivity" 
                    android:exported="true">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # MainActivity.kt
        cat > minimal_build/app/src/main/java/com/test/MainActivity.kt << 'EOF'
        package com.test
        
        import android.app.Activity
        import android.os.Bundle
        import android.widget.TextView
        import android.widget.LinearLayout
        import android.view.ViewGroup
        
        class MainActivity : Activity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)
                
                val layout = LinearLayout(this).apply {
                    orientation = LinearLayout.VERTICAL
                    layoutParams = ViewGroup.LayoutParams(
                        ViewGroup.LayoutParams.MATCH_PARENT,
                        ViewGroup.LayoutParams.MATCH_PARENT
                    )
                }
                
                val textView = TextView(this).apply {
                    text = "🚀 SmartAgent Working!"
                    textSize = 24f
                    setPadding(50, 50, 50, 50)
                }
                
                layout.addView(textView)
                setContentView(layout)
            }
        }
        EOF
        
        # strings.xml
        cat > minimal_build/app/src/main/res/values/strings.xml << 'EOF'
        <resources>
            <string name="app_name">SmartAgent</string>
        </resources>
        EOF
        
        # gradle.properties
        cat > minimal_build/gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        EOF
        
        # Create gradle wrapper
        cd minimal_build
        gradle wrapper --gradle-version 7.4.2 --distribution-type all
        chmod +x gradlew
        
    - name: "🔨 Build APK"
      run: |
        cd minimal_build
        export ANDROID_HOME=/opt/android-sdk
        export ANDROID_SDK_ROOT=/opt/android-sdk
        
        ./gradlew clean assembleDebug --stacktrace --info
        
    - name: "📦 Upload APK"
      uses: actions/upload-artifact@v3
      with:
        name: emergency-build-apk
        path: minimal_build/app/build/outputs/apk/debug/*.apk
        
    - name: "✅ Success"
      run: |
        echo "🎉 Emergency build successful!"
        ls -la minimal_build/app/build/outputs/apk/debug/
